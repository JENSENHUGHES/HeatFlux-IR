function TimeData = ReadTimeStampData_3_24_14(File, Frames)

%Function will read the timestamp data off of a csv file generated by
%ExaminIR.

%Allocate space for matrices
TimeMatrix = zeros(3,Frames);   %holds time data in 3 values (hours,minutes,seconds)
TimeData = zeros(1,Frames);     %holds time data in single value(seconds)

h = waitbar(0,'Reading Time Data Files...');
%Determine 1st file name and existance
filename = sprintf('%s_%1.0f.csv',File,1);
existance = exist(filename);
jj = 1;

%Loop through all frames
for ii = 1:Frames
    waitbar(ii/Frames)
    kk = 0;
    %Determine existance of file
    while existance == 0;
        jj = jj + 1;
        filename = sprintf('%s_%1.0f.csv',File,jj);
        existance = exist(filename);
        if kk > 100
            warning('Over 100 frames skipped:  Check total number of frames')
        end
        kk = kk + 1;
    end
    %read files that exist
%    fprintf('Reading File:  %s_%1.0f.csv (%1.0f of %1.0f)\n',File,ii,ii,Frames)
    TimeMatrix(:,ii) = dlmread(filename,':',[2,1,2,3]);
    
    jj = jj + 1;
    filename = sprintf('%s_%1.0f.csv',File,jj);
    existance = exist(filename);
end
close(h)
%LEGACY CODE
% %Read timestamp data off of csv files
% for i = 1:Frames
%     filename = sprintf('%s_%1.0f.csv',File,i+Beginning-1);
%     TimeMatrix(:,i) = dlmread(filename,':',[2,1,2,3]);
% end

%Convert time to single value
TimeData = TimeMatrix(3,:) + 60*TimeMatrix(2,:) + 3600*TimeMatrix(1,:);

StartTime = TimeData(1);            %Absolute start time of test

%Convert absolute time to relative time (relative to test start)
for i = 1:Frames
    TimeData(i) = TimeData(i)-StartTime;
end